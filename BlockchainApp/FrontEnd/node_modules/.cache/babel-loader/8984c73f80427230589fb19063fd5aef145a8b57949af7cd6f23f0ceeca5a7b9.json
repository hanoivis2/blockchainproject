{"ast":null,"code":"var _jsxFileName = \"/Users/fc/Downloads/Block chain/aqua-wallet/src/scenes/Account/AccountTransactions.tsx\",\n  _s = $RefreshSig$();\nimport { ethers } from 'ethers';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { goerli } from '../../models/Chain';\nimport { TransactionService } from '../../services/TransactionService';\nimport { shortenAddress } from '../../utils/AccountUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AccountTransactions = _ref => {\n  _s();\n  let {\n    account\n  } = _ref;\n  const [transactions, setTransactions] = useState([]);\n  const [networkResponse, setNetworkResponse] = useState({\n    status: null,\n    message: ''\n  });\n  const getTransactions = useCallback(() => {\n    setNetworkResponse({\n      status: 'pending',\n      message: ''\n    });\n    TransactionService.getTransactions(account.address).then(response => {\n      setTransactions(response.data.result);\n    }).catch(error => {\n      console.log({\n        error\n      });\n      setNetworkResponse({\n        status: 'error',\n        message: JSON.stringify(error)\n      });\n    }).finally(() => {\n      setNetworkResponse({\n        status: 'complete',\n        message: ''\n      });\n    });\n  }, [account.address]);\n  useEffect(() => {\n    getTransactions();\n  }, [getTransactions]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"AccountTransactions\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"TransactionsMetaData\",\n      children: [networkResponse.status === \"complete\" && transactions.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No transactions found for this address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: getTransactions,\n        disabled: networkResponse.status === \"pending\",\n        children: \"Refresh Transactions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), networkResponse.status && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [networkResponse.status === \"pending\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-info\",\n          children: \"Loading transactions...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), networkResponse.status === \"error\" && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: [\"Error occurred while transferring tokens: \", networkResponse.message]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table table-striped overflow-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Hash\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"From\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"To\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Value\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Timestamp\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `${goerli.blockExplorerUrl}/tx/${transaction.hash}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: shortenAddress(transaction.hash)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              href: `${goerli.blockExplorerUrl}/address/${transaction.from_address}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: shortenAddress(transaction.from_address)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 21\n            }, this), transaction.from_address.toLowerCase() === account.address.toLowerCase() ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge rounded-pill bg-warning\",\n              children: \"OUT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 25\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"badge rounded-pill bg-success\",\n              children: \"IN\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `${goerli.blockExplorerUrl}/address/${transaction.to_address}`,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: shortenAddress(transaction.to_address)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [ethers.utils.formatEther(transaction.value), \" ETH\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(transaction.block_timestamp).toLocaleString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }, this)]\n        }, transaction.hash, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(AccountTransactions, \"P3orFBiP+o0He996VbpcM6dZDk4=\");\n_c = AccountTransactions;\nexport default AccountTransactions;\nvar _c;\n$RefreshReg$(_c, \"AccountTransactions\");","map":{"version":3,"names":["ethers","React","useCallback","useEffect","useState","goerli","TransactionService","shortenAddress","AccountTransactions","account","transactions","setTransactions","networkResponse","setNetworkResponse","status","message","getTransactions","address","then","response","data","result","catch","error","console","log","JSON","stringify","finally","length","map","transaction","blockExplorerUrl","hash","from_address","toLowerCase","to_address","utils","formatEther","value","Date","block_timestamp","toLocaleString"],"sources":["/Users/fc/Downloads/Block chain/aqua-wallet/src/scenes/Account/AccountTransactions.tsx"],"sourcesContent":["import { ethers } from 'ethers';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Account } from '../../models/Account';\nimport { goerli } from '../../models/Chain';\nimport { Transaction } from '../../models/Transaction';\nimport { TransactionService } from '../../services/TransactionService';\nimport { shortenAddress } from '../../utils/AccountUtils';\n\ntype AccountTransactionsProps = {\n  account: Account,\n};\n\n\nconst AccountTransactions: React.FC<AccountTransactionsProps> = ({ account }) => {\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n\n  const [networkResponse, setNetworkResponse] = useState<{ status: null | 'pending' | 'complete' | 'error', message: string | React.ReactElement }>({\n    status: null,\n    message: '',\n  });\n\n  const getTransactions = useCallback(\n    () => {\n        setNetworkResponse({\n            status: 'pending',\n            message: '',\n          });\n        TransactionService.getTransactions(account.address).then(response => {\n          setTransactions(response.data.result);\n        }).catch(error => {\n            console.log({error})\n            setNetworkResponse({\n                status: 'error',\n                message: JSON.stringify(error),\n              });\n        }).finally(()=>{\n            setNetworkResponse({\n                status: 'complete',\n                message: '',\n            });\n        });\n      },[account.address]\n  ) ;\n\n  useEffect(() => {\n    getTransactions();\n  }, [getTransactions]);\n\n  return (\n    <div className=\"AccountTransactions\">\n\n        <h2>Transactions</h2>\n        <div className=\"TransactionsMetaData\">\n            {networkResponse.status === \"complete\" && transactions.length === 0 && (\n                <p>No transactions found for this address</p>\n            )}\n            <button type=\"button\" className=\"btn btn-primary\" onClick={getTransactions} disabled={networkResponse.status===\"pending\"}>\n            Refresh Transactions\n            </button>\n            {/* Show the network response status and message */}\n            {networkResponse.status && (\n            <>\n            {networkResponse.status === \"pending\" && (\n            <p className=\"text-info\">Loading transactions...</p>\n            )}\n            {networkResponse.status === \"error\" && (\n            <p className=\"text-danger\">\n                Error occurred while transferring tokens: {networkResponse.message}\n            </p>\n            )}\n            </>\n            )}\n        </div>\n        <table className=\"table table-striped overflow-auto\">\n            <thead>\n            <tr>\n                <th>Hash</th>\n                <th>From</th>\n                <th>To</th>\n                <th>Value</th>\n                <th>Timestamp</th>\n            </tr>\n            </thead>\n            <tbody>\n            {transactions.map(transaction => (\n                <tr key={transaction.hash}>\n                <td>\n                    <a\n                    href={`${goerli.blockExplorerUrl}/tx/${transaction.hash}`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    {shortenAddress(transaction.hash)}\n                    </a>\n                </td>\n                <td>\n                    <a\n                    href={`${goerli.blockExplorerUrl}/address/${transaction.from_address}`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    {shortenAddress(transaction.from_address)}\n                    </a>\n                    {transaction.from_address.toLowerCase()===account.address.toLowerCase() ? \n                        <span className=\"badge rounded-pill bg-warning\">OUT</span>\n                        :\n                        <span className=\"badge rounded-pill bg-success\">IN</span>\n                    }\n                </td>\n                <td>\n                    <a\n                    href={`${goerli.blockExplorerUrl}/address/${transaction.to_address}`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    {shortenAddress(transaction.to_address)}\n                    </a>\n                </td>\n                <td>\n                    {ethers.utils.formatEther(transaction.value)} ETH\n                </td>\n                <td>\n                    {new Date(transaction.block_timestamp).toLocaleString()}\n                </td>\n                </tr>\n            ))}\n            </tbody>\n        </table>\n    </div>\n  );\n};\n\nexport default AccountTransactions;"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,KAAK,IAAIC,WAAW,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE/D,SAASC,MAAM,QAAQ,oBAAoB;AAE3C,SAASC,kBAAkB,QAAQ,mCAAmC;AACtE,SAASC,cAAc,QAAQ,0BAA0B;AAAC;AAAA;AAO1D,MAAMC,mBAAuD,GAAG,QAAiB;EAAA;EAAA,IAAhB;IAAEC;EAAQ,CAAC;EAC1E,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGP,QAAQ,CAAgB,EAAE,CAAC;EAEnE,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAA4F;IAChJU,MAAM,EAAE,IAAI;IACZC,OAAO,EAAE;EACX,CAAC,CAAC;EAEF,MAAMC,eAAe,GAAGd,WAAW,CACjC,MAAM;IACFW,kBAAkB,CAAC;MACfC,MAAM,EAAE,SAAS;MACjBC,OAAO,EAAE;IACX,CAAC,CAAC;IACJT,kBAAkB,CAACU,eAAe,CAACP,OAAO,CAACQ,OAAO,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAI;MACnER,eAAe,CAACQ,QAAQ,CAACC,IAAI,CAACC,MAAM,CAAC;IACvC,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAI;MACdC,OAAO,CAACC,GAAG,CAAC;QAACF;MAAK,CAAC,CAAC;MACpBV,kBAAkB,CAAC;QACfC,MAAM,EAAE,OAAO;QACfC,OAAO,EAAEW,IAAI,CAACC,SAAS,CAACJ,KAAK;MAC/B,CAAC,CAAC;IACR,CAAC,CAAC,CAACK,OAAO,CAAC,MAAI;MACXf,kBAAkB,CAAC;QACfC,MAAM,EAAE,UAAU;QAClBC,OAAO,EAAE;MACb,CAAC,CAAC;IACN,CAAC,CAAC;EACJ,CAAC,EAAC,CAACN,OAAO,CAACQ,OAAO,CAAC,CACtB;EAEDd,SAAS,CAAC,MAAM;IACda,eAAe,EAAE;EACnB,CAAC,EAAE,CAACA,eAAe,CAAC,CAAC;EAErB,oBACE;IAAK,SAAS,EAAC,qBAAqB;IAAA,wBAEhC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAqB,eACrB;MAAK,SAAS,EAAC,sBAAsB;MAAA,WAChCJ,eAAe,CAACE,MAAM,KAAK,UAAU,IAAIJ,YAAY,CAACmB,MAAM,KAAK,CAAC,iBAC/D;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QACH,eACD;QAAQ,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAC,iBAAiB;QAAC,OAAO,EAAEb,eAAgB;QAAC,QAAQ,EAAEJ,eAAe,CAACE,MAAM,KAAG,SAAU;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAEhH,EAERF,eAAe,CAACE,MAAM,iBACvB;QAAA,WACCF,eAAe,CAACE,MAAM,KAAK,SAAS,iBACrC;UAAG,SAAS,EAAC,WAAW;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QACvB,EACAF,eAAe,CAACE,MAAM,KAAK,OAAO,iBACnC;UAAG,SAAS,EAAC,aAAa;UAAA,yDACqBF,eAAe,CAACG,OAAO;QAAA;UAAA;UAAA;UAAA;QAAA,QAErE;MAAA,gBAEA;IAAA;MAAA;MAAA;MAAA;IAAA,QACC,eACN;MAAO,SAAS,EAAC,mCAAmC;MAAA,wBAChD;QAAA,uBACA;UAAA,wBACI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAa,eACb;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAa,eACb;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAW,eACX;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAc,eACd;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAkB;QAAA;UAAA;UAAA;UAAA;QAAA;MACjB;QAAA;QAAA;QAAA;MAAA,QACG,eACR;QAAA,UACCL,YAAY,CAACoB,GAAG,CAACC,WAAW,iBACzB;UAAA,wBACA;YAAA,uBACI;cACA,IAAI,EAAG,GAAE1B,MAAM,CAAC2B,gBAAiB,OAAMD,WAAW,CAACE,IAAK,EAAE;cAC1D,MAAM,EAAC,QAAQ;cACf,GAAG,EAAC,qBAAqB;cAAA,UAExB1B,cAAc,CAACwB,WAAW,CAACE,IAAI;YAAC;cAAA;cAAA;cAAA;YAAA;UAC7B;YAAA;YAAA;YAAA;UAAA,QACH,eACL;YAAA,wBACI;cACA,IAAI,EAAG,GAAE5B,MAAM,CAAC2B,gBAAiB,YAAWD,WAAW,CAACG,YAAa,EAAE;cACvE,MAAM,EAAC,QAAQ;cACf,GAAG,EAAC,qBAAqB;cAAA,UAExB3B,cAAc,CAACwB,WAAW,CAACG,YAAY;YAAC;cAAA;cAAA;cAAA;YAAA,QACrC,EACHH,WAAW,CAACG,YAAY,CAACC,WAAW,EAAE,KAAG1B,OAAO,CAACQ,OAAO,CAACkB,WAAW,EAAE,gBACnE;cAAM,SAAS,EAAC,+BAA+B;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAW,gBAE1D;cAAM,SAAS,EAAC,+BAA+B;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QAAU;UAAA;YAAA;YAAA;YAAA;UAAA,QAE5D,eACL;YAAA,uBACI;cACA,IAAI,EAAG,GAAE9B,MAAM,CAAC2B,gBAAiB,YAAWD,WAAW,CAACK,UAAW,EAAE;cACrE,MAAM,EAAC,QAAQ;cACf,GAAG,EAAC,qBAAqB;cAAA,UAExB7B,cAAc,CAACwB,WAAW,CAACK,UAAU;YAAC;cAAA;cAAA;cAAA;YAAA;UACnC;YAAA;YAAA;YAAA;UAAA,QACH,eACL;YAAA,WACKpC,MAAM,CAACqC,KAAK,CAACC,WAAW,CAACP,WAAW,CAACQ,KAAK,CAAC;UAAA;YAAA;YAAA;YAAA;UAAA,QAC3C,eACL;YAAA,UACK,IAAIC,IAAI,CAACT,WAAW,CAACU,eAAe,CAAC,CAACC,cAAc;UAAE;YAAA;YAAA;YAAA;UAAA,QACtD;QAAA,GAtCIX,WAAW,CAACE,IAAI;UAAA;UAAA;UAAA;QAAA,QAwC5B;MAAC;QAAA;QAAA;QAAA;MAAA,QACM;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACN;AAEV,CAAC;AAAC,GArHIzB,mBAAuD;AAAA,KAAvDA,mBAAuD;AAuH7D,eAAeA,mBAAmB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}