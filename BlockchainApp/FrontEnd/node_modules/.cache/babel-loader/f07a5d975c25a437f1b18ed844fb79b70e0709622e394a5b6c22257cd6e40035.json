{"ast":null,"code":"import _slicedToArray from\"/Users/fc/Downloads/Block chain/aqua-wallet/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{ethers}from'ethers';import React,{useCallback,useEffect,useState}from'react';import{goerli}from'../../models/Chain';import{TransactionService}from'../../services/TransactionService';import{shortenAddress}from'../../utils/AccountUtils';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var AccountTransactions=function AccountTransactions(_ref){var account=_ref.account;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),transactions=_useState2[0],setTransactions=_useState2[1];var _useState3=useState({status:null,message:''}),_useState4=_slicedToArray(_useState3,2),networkResponse=_useState4[0],setNetworkResponse=_useState4[1];var getTransactions=useCallback(function(){setNetworkResponse({status:'pending',message:''});TransactionService.getTransactions(account.address).then(function(response){setTransactions(response.data.result);}).catch(function(error){console.log({error:error});setNetworkResponse({status:'error',message:JSON.stringify(error)});}).finally(function(){setNetworkResponse({status:'complete',message:''});});},[account.address]);useEffect(function(){getTransactions();},[getTransactions]);return/*#__PURE__*/_jsxs(\"div\",{className:\"AccountTransactions\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Transactions\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"TransactionsMetaData\",children:[networkResponse.status===\"complete\"&&transactions.length===0&&/*#__PURE__*/_jsx(\"p\",{children:\"No transactions found for this address\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-primary\",onClick:getTransactions,disabled:networkResponse.status===\"pending\",children:\"Refresh Transactions\"}),networkResponse.status&&/*#__PURE__*/_jsxs(_Fragment,{children:[networkResponse.status===\"pending\"&&/*#__PURE__*/_jsx(\"p\",{className:\"text-info\",children:\"Loading transactions...\"}),networkResponse.status===\"error\"&&/*#__PURE__*/_jsxs(\"p\",{className:\"text-danger\",children:[\"Error occurred while transferring tokens: \",networkResponse.message]})]})]}),/*#__PURE__*/_jsxs(\"table\",{className:\"table table-striped overflow-auto\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Hash\"}),/*#__PURE__*/_jsx(\"th\",{children:\"From\"}),/*#__PURE__*/_jsx(\"th\",{children:\"To\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Value\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Timestamp\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:transactions.map(function(transaction){return/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"\".concat(goerli.blockExplorerUrl,\"/tx/\").concat(transaction.hash),target:\"_blank\",rel:\"noopener noreferrer\",children:shortenAddress(transaction.hash)})}),/*#__PURE__*/_jsxs(\"td\",{children:[/*#__PURE__*/_jsx(\"a\",{href:\"\".concat(goerli.blockExplorerUrl,\"/address/\").concat(transaction.from_address),target:\"_blank\",rel:\"noopener noreferrer\",children:shortenAddress(transaction.from_address)}),transaction.from_address.toLowerCase()===account.address.toLowerCase()?/*#__PURE__*/_jsx(\"span\",{className:\"badge rounded-pill bg-warning\",children:\"OUT\"}):/*#__PURE__*/_jsx(\"span\",{className:\"badge rounded-pill bg-success\",children:\"IN\"})]}),/*#__PURE__*/_jsx(\"td\",{children:/*#__PURE__*/_jsx(\"a\",{href:\"\".concat(goerli.blockExplorerUrl,\"/address/\").concat(transaction.to_address),target:\"_blank\",rel:\"noopener noreferrer\",children:shortenAddress(transaction.to_address)})}),/*#__PURE__*/_jsxs(\"td\",{children:[ethers.utils.formatEther(transaction.value),\" ETH\"]}),/*#__PURE__*/_jsx(\"td\",{children:new Date(transaction.block_timestamp).toLocaleString()})]},transaction.hash);})})]})]});};export default AccountTransactions;","map":{"version":3,"names":["ethers","React","useCallback","useEffect","useState","goerli","TransactionService","shortenAddress","AccountTransactions","account","transactions","setTransactions","status","message","networkResponse","setNetworkResponse","getTransactions","address","then","response","data","result","catch","error","console","log","JSON","stringify","finally","length","map","transaction","blockExplorerUrl","hash","from_address","toLowerCase","to_address","utils","formatEther","value","Date","block_timestamp","toLocaleString"],"sources":["/Users/fc/Downloads/Block chain/aqua-wallet/src/scenes/Account/AccountTransactions.tsx"],"sourcesContent":["import { ethers } from 'ethers';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Account } from '../../models/Account';\nimport { goerli } from '../../models/Chain';\nimport { Transaction } from '../../models/Transaction';\nimport { TransactionService } from '../../services/TransactionService';\nimport { shortenAddress } from '../../utils/AccountUtils';\n\ntype AccountTransactionsProps = {\n  account: Account,\n};\n\n\nconst AccountTransactions: React.FC<AccountTransactionsProps> = ({ account }) => {\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n\n  const [networkResponse, setNetworkResponse] = useState<{ status: null | 'pending' | 'complete' | 'error', message: string | React.ReactElement }>({\n    status: null,\n    message: '',\n  });\n\n  const getTransactions = useCallback(\n    () => {\n        setNetworkResponse({\n            status: 'pending',\n            message: '',\n          });\n        TransactionService.getTransactions(account.address).then(response => {\n          setTransactions(response.data.result);\n        }).catch(error => {\n            console.log({error})\n            setNetworkResponse({\n                status: 'error',\n                message: JSON.stringify(error),\n              });\n        }).finally(()=>{\n            setNetworkResponse({\n                status: 'complete',\n                message: '',\n            });\n        });\n      },[account.address]\n  ) ;\n\n  useEffect(() => {\n    getTransactions();\n  }, [getTransactions]);\n\n  return (\n    <div className=\"AccountTransactions\">\n\n        <h2>Transactions</h2>\n        <div className=\"TransactionsMetaData\">\n            {networkResponse.status === \"complete\" && transactions.length === 0 && (\n                <p>No transactions found for this address</p>\n            )}\n            <button type=\"button\" className=\"btn btn-primary\" onClick={getTransactions} disabled={networkResponse.status===\"pending\"}>\n            Refresh Transactions\n            </button>\n            {/* Show the network response status and message */}\n            {networkResponse.status && (\n            <>\n            {networkResponse.status === \"pending\" && (\n            <p className=\"text-info\">Loading transactions...</p>\n            )}\n            {networkResponse.status === \"error\" && (\n            <p className=\"text-danger\">\n                Error occurred while transferring tokens: {networkResponse.message}\n            </p>\n            )}\n            </>\n            )}\n        </div>\n        <table className=\"table table-striped overflow-auto\">\n            <thead>\n            <tr>\n                <th>Hash</th>\n                <th>From</th>\n                <th>To</th>\n                <th>Value</th>\n                <th>Timestamp</th>\n            </tr>\n            </thead>\n            <tbody>\n            {transactions.map(transaction => (\n                <tr key={transaction.hash}>\n                <td>\n                    <a\n                    href={`${goerli.blockExplorerUrl}/tx/${transaction.hash}`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    {shortenAddress(transaction.hash)}\n                    </a>\n                </td>\n                <td>\n                    <a\n                    href={`${goerli.blockExplorerUrl}/address/${transaction.from_address}`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    {shortenAddress(transaction.from_address)}\n                    </a>\n                    {transaction.from_address.toLowerCase()===account.address.toLowerCase() ? \n                        <span className=\"badge rounded-pill bg-warning\">OUT</span>\n                        :\n                        <span className=\"badge rounded-pill bg-success\">IN</span>\n                    }\n                </td>\n                <td>\n                    <a\n                    href={`${goerli.blockExplorerUrl}/address/${transaction.to_address}`}\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    >\n                    {shortenAddress(transaction.to_address)}\n                    </a>\n                </td>\n                <td>\n                    {ethers.utils.formatEther(transaction.value)} ETH\n                </td>\n                <td>\n                    {new Date(transaction.block_timestamp).toLocaleString()}\n                </td>\n                </tr>\n            ))}\n            </tbody>\n        </table>\n    </div>\n  );\n};\n\nexport default AccountTransactions;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}