{"ast":null,"code":"import _regeneratorRuntime from\"/Users/fc/Downloads/Block chain/aqua-wallet/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/fc/Downloads/Block chain/aqua-wallet/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/fc/Downloads/Block chain/aqua-wallet/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{sendToken}from'../../utils/TransactionUtils';import{goerli}from'../../models/Chain';import AccountTransactions from'./AccountTransactions';import{ethers}from'ethers';import{toFixedIfNecessary}from'../../utils/AccountUtils';import'./Account.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var AccountDetail=function AccountDetail(_ref){var account=_ref.account;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),destinationAddress=_useState2[0],setDestinationAddress=_useState2[1];var _useState3=useState(0),_useState4=_slicedToArray(_useState3,2),amount=_useState4[0],setAmount=_useState4[1];var _useState5=useState(account.balance),_useState6=_slicedToArray(_useState5,2),balance=_useState6[0],setBalance=_useState6[1];var _useState7=useState({status:null,message:''}),_useState8=_slicedToArray(_useState7,2),networkResponse=_useState8[0],setNetworkResponse=_useState8[1];useEffect(function(){var fetchData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var provider,accountBalance;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:provider=new ethers.providers.JsonRpcProvider(goerli.rpcUrl);_context.next=3;return provider.getBalance(account.address);case 3:accountBalance=_context.sent;setBalance(String(toFixedIfNecessary(ethers.utils.formatEther(accountBalance))));case 5:case\"end\":return _context.stop();}}},_callee);}));return function fetchData(){return _ref2.apply(this,arguments);};}();fetchData();},[account.address]);function handleDestinationAddressChange(event){setDestinationAddress(event.target.value);}function handleAmountChange(event){setAmount(Number.parseFloat(event.target.value));}function transfer(){return _transfer.apply(this,arguments);}function _transfer(){_transfer=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var _yield$sendToken,receipt;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:// Set the network response status to \"pending\"\nsetNetworkResponse({status:'pending',message:''});_context2.prev=1;_context2.next=4;return sendToken(amount,account.address,destinationAddress,account.privateKey);case 4:_yield$sendToken=_context2.sent;receipt=_yield$sendToken.receipt;if(!(receipt.status===1)){_context2.next=11;break;}// Set the network response status to \"complete\" and the message to the transaction hash\nsetNetworkResponse({status:'complete',message:/*#__PURE__*/_jsxs(\"p\",{children:[\"Transfer complete! \",/*#__PURE__*/_jsx(\"a\",{href:\"\".concat(goerli.blockExplorerUrl,\"/tx/\").concat(receipt.transactionHash),target:\"_blank\",rel:\"noreferrer\",children:\"View transaction\"})]})});return _context2.abrupt(\"return\",receipt);case 11:// Transaction failed\nconsole.log(\"Failed to send \".concat(receipt));// Set the network response status to \"error\" and the message to the receipt\nsetNetworkResponse({status:'error',message:JSON.stringify(receipt)});return _context2.abrupt(\"return\",{receipt:receipt});case 14:_context2.next=20;break;case 16:_context2.prev=16;_context2.t0=_context2[\"catch\"](1);// An error occurred while sending the transaction\nconsole.error({error:_context2.t0});// Set the network response status to \"error\" and the message to the error\nsetNetworkResponse({status:'error',message:_context2.t0.reason||JSON.stringify(_context2.t0)});case 20:case\"end\":return _context2.stop();}}},_callee2,null,[[1,16]]);}));return _transfer.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"div\",{className:\"AccountDetail container\",children:[/*#__PURE__*/_jsxs(\"h4\",{children:[\"Address: \",/*#__PURE__*/_jsx(\"a\",{href:\"https://goerli.etherscan.io/address/\".concat(account.address),target:\"_blank\",rel:\"noreferrer\",children:account.address}),/*#__PURE__*/_jsx(\"br\",{}),\"Balance: \",balance,\" ETH\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Destination Address:\"}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control\",type:\"text\",value:destinationAddress,onChange:handleDestinationAddressChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Amount:\"}),/*#__PURE__*/_jsx(\"input\",{className:\"form-control\",type:\"number\",value:amount,onChange:handleAmountChange})]}),/*#__PURE__*/_jsxs(\"button\",{className:\"btn btn-primary\",type:\"button\",onClick:transfer,disabled:!amount||networkResponse.status==='pending',children:[\"Send \",amount,\" ETH\"]}),networkResponse.status&&/*#__PURE__*/_jsxs(_Fragment,{children:[networkResponse.status==='pending'&&/*#__PURE__*/_jsx(\"p\",{children:\"Transfer is pending...\"}),networkResponse.status==='complete'&&/*#__PURE__*/_jsx(\"p\",{children:networkResponse.message}),networkResponse.status==='error'&&/*#__PURE__*/_jsxs(\"p\",{children:[\"Error occurred while transferring tokens: \",networkResponse.message]})]}),/*#__PURE__*/_jsx(AccountTransactions,{account:account})]});};export default AccountDetail;","map":{"version":3,"names":["React","useEffect","useState","sendToken","goerli","AccountTransactions","ethers","toFixedIfNecessary","AccountDetail","account","destinationAddress","setDestinationAddress","amount","setAmount","balance","setBalance","status","message","networkResponse","setNetworkResponse","fetchData","provider","providers","JsonRpcProvider","rpcUrl","getBalance","address","accountBalance","String","utils","formatEther","handleDestinationAddressChange","event","target","value","handleAmountChange","Number","parseFloat","transfer","privateKey","receipt","blockExplorerUrl","transactionHash","console","log","JSON","stringify","error","reason"],"sources":["/Users/fc/Downloads/Block chain/aqua-wallet/src/scenes/Account/AccountDetail.tsx"],"sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { sendToken } from '../../utils/TransactionUtils';\nimport { goerli } from '../../models/Chain';\nimport { Account } from '../../models/Account';\nimport AccountTransactions from './AccountTransactions';\nimport { ethers } from 'ethers';\nimport { toFixedIfNecessary } from '../../utils/AccountUtils';\nimport './Account.css';\n\ninterface AccountDetailProps {\n  account: Account\n}\n\nconst AccountDetail: React.FC<AccountDetailProps> = ({account}) => {\n  const [destinationAddress, setDestinationAddress] = useState('');\n  const [amount, setAmount] = useState(0);\n  const [balance, setBalance] = useState(account.balance)\n\n  const [networkResponse, setNetworkResponse] = useState<{ status: null | 'pending' | 'complete' | 'error', message: string | React.ReactElement }>({\n    status: null,\n    message: '',\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n        const provider = new ethers.providers.JsonRpcProvider(goerli.rpcUrl);\n        let accountBalance = await provider.getBalance(account.address);\n        setBalance((String(toFixedIfNecessary(ethers.utils.formatEther(accountBalance)))));\n    }\n    fetchData();\n}, [account.address])\n\n  function handleDestinationAddressChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setDestinationAddress(event.target.value);\n  }\n\n  function handleAmountChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setAmount(Number.parseFloat(event.target.value));\n  }\n\n  async function transfer() {\n    // Set the network response status to \"pending\"\n    setNetworkResponse({\n      status: 'pending',\n      message: '',\n    });\n\n    try {\n      const { receipt } = await sendToken(amount, account.address, destinationAddress, account.privateKey);\n\n      if (receipt.status === 1) {\n        // Set the network response status to \"complete\" and the message to the transaction hash\n        setNetworkResponse({\n          status: 'complete',\n          message: <p>Transfer complete! <a href={`${goerli.blockExplorerUrl}/tx/${receipt.transactionHash}`} target=\"_blank\" rel=\"noreferrer\">\n            View transaction\n            </a></p>,\n        });\n        return receipt;\n      } else {\n        // Transaction failed\n        console.log(`Failed to send ${receipt}`);\n        // Set the network response status to \"error\" and the message to the receipt\n        setNetworkResponse({\n          status: 'error',\n          message: JSON.stringify(receipt),\n        });\n        return { receipt };\n      }\n    } catch (error: any) {\n      // An error occurred while sending the transaction\n      console.error({ error });\n      // Set the network response status to \"error\" and the message to the error\n      setNetworkResponse({\n        status: 'error',\n        message: error.reason || JSON.stringify(error),\n      });\n    }\n  }\n\n  return (\n    <div className='AccountDetail container'>\n        <h4>\n            Address: <a href={`https://goerli.etherscan.io/address/${account.address}`} target=\"_blank\" rel=\"noreferrer\">\n            {account.address}\n            </a><br/>\n            Balance: {balance} ETH\n        </h4>\n\n        <div className=\"form-group\">\n            <label>Destination Address:</label>\n            <input\n            className=\"form-control\"\n            type=\"text\"\n            value={destinationAddress}\n            onChange={handleDestinationAddressChange}\n            />\n        </div>\n\n        <div className=\"form-group\">\n            <label>Amount:</label>\n            <input\n            className=\"form-control\"\n            type=\"number\"\n            value={amount}\n            onChange={handleAmountChange}\n            />\n        </div>\n\n        <button\n            className=\"btn btn-primary\"\n            type=\"button\"\n            onClick={transfer}\n            disabled={!amount || networkResponse.status === 'pending'}\n        >\n            Send {amount} ETH\n        </button>\n\n        {networkResponse.status &&\n            <>\n            {networkResponse.status === 'pending' && <p>Transfer is pending...</p>}\n            {networkResponse.status === 'complete' && <p>{networkResponse.message}</p>}\n            {networkResponse.status === 'error' && <p>Error occurred while transferring tokens: {networkResponse.message}</p>}\n            </>\n        }\n\n        <AccountTransactions account={account} />\n    </div>\n\n  )\n}\n\nexport default AccountDetail;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}