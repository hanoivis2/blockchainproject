{"ast":null,"code":"import _regeneratorRuntime from\"/Users/fc/Downloads/Block chain/aqua-wallet/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/fc/Downloads/Block chain/aqua-wallet/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/fc/Downloads/Block chain/aqua-wallet/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useCallback,useEffect,useState}from'react';import{generateAccount}from'../../utils/AccountUtils';import AccountDetail from'./AccountDetail';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var recoveryPhraseKeyName='recoveryPhrase';function AccountCreate(){// Declare a new state variable, which we'll call \"seedphrase\"\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),seedphrase=_useState2[0],setSeedphrase=_useState2[1];// Declare a new state variable, which we'll call \"account\"\nvar _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),account=_useState4[0],setAccount=_useState4[1];// Declare a new state variable, which we'll call \"showRecoverInput\"\n// and initialize it to false\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),showRecoverInput=_useState6[0],setShowRecoverInput=_useState6[1];function handleChange(event){// Update the seedphrase state with the value from the text input\nsetSeedphrase(event.target.value);}var handleKeyDown=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(event){return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(event.keyCode===13){event.preventDefault();recoverAccount(seedphrase);}case 1:case\"end\":return _context.stop();}}},_callee);}));return function handleKeyDown(_x){return _ref.apply(this,arguments);};}();var recoverAccount=useCallback(/*#__PURE__*/ // recoverAccount could be used without recoveryPhrase as an arguement but then we would have to\n// put it in a deps array.\nfunction(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(recoveryPhrase){var result;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return generateAccount(recoveryPhrase);case 2:result=_context2.sent;// Update the account state with the newly recovered account\nsetAccount(result.account);if(localStorage.getItem(recoveryPhraseKeyName)!==recoveryPhrase){localStorage.setItem(recoveryPhraseKeyName,recoveryPhrase);}case 5:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}(),[]);useEffect(function(){var localStorageRecoveryPhrase=localStorage.getItem(recoveryPhraseKeyName);if(localStorageRecoveryPhrase){setSeedphrase(localStorageRecoveryPhrase);recoverAccount(localStorageRecoveryPhrase);}},[recoverAccount]);function createAccount(){return _createAccount.apply(this,arguments);}function _createAccount(){_createAccount=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var result;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return generateAccount();case 2:result=_context3.sent;// Update the account state with the newly created account\nsetAccount(result.account);case 4:case\"end\":return _context3.stop();}}},_callee3);}));return _createAccount.apply(this,arguments);}return/*#__PURE__*/_jsxs(\"div\",{className:\"AccountCreate p-5 m-3 card shadow\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Aqua Wallet\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:function onSubmit(event){return event.preventDefault();},children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-primary\",onClick:createAccount,children:\"Create Account\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"btn btn-outline-primary ml-3\",onClick:function onClick(){return showRecoverInput?recoverAccount(seedphrase):setShowRecoverInput(true);}// if the recoveryinput is showing but there is no seedphrase, disable the ability to recover account\n,disabled:showRecoverInput&&!seedphrase,children:\"Recover account\"}),showRecoverInput&&/*#__PURE__*/_jsx(\"div\",{className:\"form-group mt-3\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Seedphrase or private key for recovery\",className:\"form-control\",value:seedphrase,onChange:handleChange,onKeyDown:handleKeyDown})})]}),account&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"hr\",{}),/*#__PURE__*/_jsx(AccountDetail,{account:account})]})]});}export default AccountCreate;","map":{"version":3,"names":["React","useCallback","useEffect","useState","generateAccount","AccountDetail","recoveryPhraseKeyName","AccountCreate","seedphrase","setSeedphrase","account","setAccount","showRecoverInput","setShowRecoverInput","handleChange","event","target","value","handleKeyDown","keyCode","preventDefault","recoverAccount","recoveryPhrase","result","localStorage","getItem","setItem","localStorageRecoveryPhrase","createAccount"],"sources":["/Users/fc/Downloads/Block chain/aqua-wallet/src/scenes/Account/AccountCreate.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { generateAccount } from '../../utils/AccountUtils';\nimport { Account } from '../../models/Account';\nimport AccountDetail from './AccountDetail';\n\nconst recoveryPhraseKeyName = 'recoveryPhrase';\n\nfunction AccountCreate() {\n  // Declare a new state variable, which we'll call \"seedphrase\"\n  const [seedphrase, setSeedphrase] = useState('');\n\n  // Declare a new state variable, which we'll call \"account\"\n  const [account, setAccount] = useState<Account | null>(null);\n\n  // Declare a new state variable, which we'll call \"showRecoverInput\"\n  // and initialize it to false\n  const [showRecoverInput, setShowRecoverInput] = useState(false);\n\n  function handleChange(event: React.ChangeEvent<HTMLInputElement>) {\n    // Update the seedphrase state with the value from the text input\n    setSeedphrase(event.target.value);\n  }\n\n  const handleKeyDown = async (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.keyCode === 13) {\n      event.preventDefault();\n      recoverAccount(seedphrase);\n    }\n  }\n\n  const recoverAccount = useCallback(\n    // recoverAccount could be used without recoveryPhrase as an arguement but then we would have to\n    // put it in a deps array.\n    async (recoveryPhrase: string) => {\n\n      // Call the generateAccount function with no arguments\n      // Call the generateAccount function and pass it 0 and the current seedphrase\n      const result = await generateAccount(recoveryPhrase);\n\n      // Update the account state with the newly recovered account\n      setAccount(result.account);\n\n      if (localStorage.getItem(recoveryPhraseKeyName) !== recoveryPhrase) {\n        localStorage.setItem(recoveryPhraseKeyName, recoveryPhrase);\n      }\n\n    }, []\n  );\n\n  useEffect(() => {\n\n    const localStorageRecoveryPhrase = localStorage.getItem(recoveryPhraseKeyName)\n    if (localStorageRecoveryPhrase) {\n      setSeedphrase(localStorageRecoveryPhrase);\n      recoverAccount(localStorageRecoveryPhrase);\n    }\n  }, [recoverAccount])\n\n  async function createAccount() {\n    // Call the generateAccount function with no arguments\n    const result = await generateAccount();\n\n    // Update the account state with the newly created account\n    setAccount(result.account);\n  }\n\n  return (\n    <div className='AccountCreate p-5 m-3 card shadow'>\n      <h1>\n        Aqua Wallet\n      </h1>\n      <form onSubmit={event => event.preventDefault()}>\n        <button type=\"button\" className=\"btn btn-primary\" onClick={createAccount}>\n          Create Account\n        </button>\n        {/* Add a button to toggle showing the recover account input and button */}\n        {/* If show recover input is visible, clicking the button again will submit the phrase in the input */}\n        <button type=\"button\" className=\"btn btn-outline-primary ml-3\"\n          onClick={() => showRecoverInput ? recoverAccount(seedphrase) : setShowRecoverInput(true)}\n          // if the recoveryinput is showing but there is no seedphrase, disable the ability to recover account\n          disabled={showRecoverInput && !seedphrase}\n        >\n          Recover account\n        </button>\n        {/* Show the recover account input and button if showRecoverInput is true */}\n        {showRecoverInput && (\n          <div className=\"form-group mt-3\">\n            <input type=\"text\" placeholder='Seedphrase or private key for recovery' className=\"form-control\"\n              value={seedphrase} onChange={handleChange} onKeyDown={handleKeyDown} />\n          </div>\n        )}\n      </form>\n      {account &&\n        <>\n          <hr />\n          <AccountDetail account={account} />\n        </>\n      }\n    </div>\n  )\n\n}\nexport default AccountCreate;"],"mappings":"mZAAA,MAAOA,MAAK,EAAIC,WAAW,CAAEC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC/D,OAASC,eAAe,KAAQ,0BAA0B,CAE1D,MAAOC,cAAa,KAAM,iBAAiB,CAAC,6IAE5C,GAAMC,sBAAqB,CAAG,gBAAgB,CAE9C,QAASC,cAAa,EAAG,CACvB;AACA,cAAoCJ,QAAQ,CAAC,EAAE,CAAC,wCAAzCK,UAAU,eAAEC,aAAa,eAEhC;AACA,eAA8BN,QAAQ,CAAiB,IAAI,CAAC,yCAArDO,OAAO,eAAEC,UAAU,eAE1B;AACA;AACA,eAAgDR,QAAQ,CAAC,KAAK,CAAC,yCAAxDS,gBAAgB,eAAEC,mBAAmB,eAE5C,QAASC,aAAY,CAACC,KAA0C,CAAE,CAChE;AACAN,aAAa,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CACnC,CAEA,GAAMC,cAAa,4FAAG,iBAAOH,KAA4C,oHACvE,GAAIA,KAAK,CAACI,OAAO,GAAK,EAAE,CAAE,CACxBJ,KAAK,CAACK,cAAc,EAAE,CACtBC,cAAc,CAACb,UAAU,CAAC,CAC5B,CAAC,sDACF,kBALKU,cAAa,4CAKlB,CAED,GAAMG,eAAc,CAAGpB,WAAW,eAChC;AACA;AAAA,+EACA,kBAAOqB,cAAsB,0JAINlB,gBAAe,CAACkB,cAAc,CAAC,QAA9CC,MAAM,gBAEZ;AACAZ,UAAU,CAACY,MAAM,CAACb,OAAO,CAAC,CAE1B,GAAIc,YAAY,CAACC,OAAO,CAACnB,qBAAqB,CAAC,GAAKgB,cAAc,CAAE,CAClEE,YAAY,CAACE,OAAO,CAACpB,qBAAqB,CAAEgB,cAAc,CAAC,CAC7D,CAAC,wDAEF,iEAAE,EAAE,CACN,CAEDpB,SAAS,CAAC,UAAM,CAEd,GAAMyB,2BAA0B,CAAGH,YAAY,CAACC,OAAO,CAACnB,qBAAqB,CAAC,CAC9E,GAAIqB,0BAA0B,CAAE,CAC9BlB,aAAa,CAACkB,0BAA0B,CAAC,CACzCN,cAAc,CAACM,0BAA0B,CAAC,CAC5C,CACF,CAAC,CAAE,CAACN,cAAc,CAAC,CAAC,SAELO,cAAa,mJAA5B,4KAEuBxB,gBAAe,EAAE,QAAhCmB,MAAM,gBAEZ;AACAZ,UAAU,CAACY,MAAM,CAACb,OAAO,CAAC,CAAC,wDAC5B,gDAED,mBACE,aAAK,SAAS,CAAC,mCAAmC,wBAChD,mCAEK,cACL,cAAM,QAAQ,CAAE,kBAAAK,KAAK,QAAIA,MAAK,CAACK,cAAc,EAAE,EAAC,wBAC9C,eAAQ,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,iBAAiB,CAAC,OAAO,CAAEQ,aAAc,4BAEhE,cAGT,eAAQ,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,8BAA8B,CAC5D,OAAO,CAAE,yBAAMhB,iBAAgB,CAAGS,cAAc,CAACb,UAAU,CAAC,CAAGK,mBAAmB,CAAC,IAAI,CAAC,EACxF;AAAA,CACA,QAAQ,CAAED,gBAAgB,EAAI,CAACJ,UAAW,6BAGnC,CAERI,gBAAgB,eACf,YAAK,SAAS,CAAC,iBAAiB,uBAC9B,cAAO,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,wCAAwC,CAAC,SAAS,CAAC,cAAc,CAC9F,KAAK,CAAEJ,UAAW,CAAC,QAAQ,CAAEM,YAAa,CAAC,SAAS,CAAEI,aAAc,EAAG,EAE5E,GACI,CACNR,OAAO,eACN,wCACE,aAAM,cACN,KAAC,aAAa,EAAC,OAAO,CAAEA,OAAQ,EAAG,GAClC,GAED,CAGV,CACA,cAAeH,cAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}